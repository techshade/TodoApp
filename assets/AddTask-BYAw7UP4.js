import{r as h,U as P,a8 as _,M as n,b as B,a9 as r,aa as i,j as e,T as U,ab as F,ac as L,ad as f,ae as T,l as k,af as G,x as H,ag as K,ah as X,ai as O,aj as V,ak as z,al as J,am as Q,an as W,K as S}from"./index-DHRrVd1t.js";import{A as Y}from"./AddTaskRounded-Cl-1mP_v.js";const se=()=>{const{user:v,setUser:b}=h.useContext(P),m=_(),[t,A]=n("","name","sessionStorage"),[u,D]=n(null,"emoji","sessionStorage"),[C,y]=n(m.primary,"color","sessionStorage"),[o,N]=n("","description","sessionStorage"),[l,E]=n("","deadline","sessionStorage"),[d,p]=h.useState(""),[c,g]=h.useState(""),[j,w]=n([],"categories","sessionStorage"),I=B();h.useEffect(()=>{document.title="Todo App - Add Task"},[]),h.useEffect(()=>{t.length>r?p(`Name should be less than or equal to ${r} characters`):p(""),o.length>i?g(`Description should be less than or equal to ${i} characters`):g("")},[o.length,t.length]);const $=s=>{const a=s.target.value;A(a),a.length>r?p(`Name should be less than or equal to ${r} characters`):p("")},R=s=>{const a=s.target.value;N(a),a.length>i?g(`Description should be less than or equal to ${i} characters`):g("")},q=s=>{E(s.target.value)},M=()=>{if(t===""){S("Task name is required.",{type:"error"});return}if(d!==""||c!=="")return;const s={id:crypto.randomUUID(),done:!1,pinned:!1,name:t,description:o!==""?o:void 0,emoji:u||void 0,color:C,date:new Date,deadline:l!==""?new Date(l):void 0,category:j||[]};b(x=>({...x,tasks:[...x.tasks,s]})),I("/"),S(e.jsxs("div",{children:["Added task - ",e.jsx("b",{children:s.name})]}),{icon:e.jsx(Y,{})}),["name","color","description","emoji","deadline","categories"].map(x=>sessionStorage.removeItem(x))};return e.jsxs(e.Fragment,{children:[e.jsx(U,{title:"Add New Task"}),e.jsxs(F,{children:[e.jsx(L,{emoji:typeof u=="string"?u:void 0,setEmoji:D,color:C,name:t}),e.jsx(f,{label:"Task Name",name:"name",placeholder:"Enter task name",autoComplete:"off",value:t,onChange:$,focused:!0,required:!0,error:d!=="",helpercolor:d&&T.red,helperText:t===""?void 0:d||`${t.length}/${r}`}),e.jsx(f,{label:"Task Description (optional)",name:"name",placeholder:"Enter task description",autoComplete:"off",value:o,onChange:R,multiline:!0,rows:4,focused:!0,error:c!=="",helpercolor:c&&T.red,helperText:o===""?void 0:c||`${o.length}/${i}`}),e.jsx(f,{label:"Task Deadline (optional)",name:"name",placeholder:"Enter deadline date",type:"datetime-local",value:l,onChange:q,defaultValue:"",focused:!0,sx:{colorScheme:k(m.secondary)===T.fontDark?"light":"dark"},InputProps:{startAdornment:l&&l!==""?e.jsx(G,{position:"start",children:e.jsx(H,{title:"Clear",children:e.jsx(K,{color:"error",onClick:()=>E(""),children:e.jsx(X,{})})})}):void 0}}),v.settings[0].enableCategories!==void 0&&v.settings[0].enableCategories&&e.jsxs(e.Fragment,{children:[e.jsx("br",{}),e.jsx(O,{selectedCategories:j,onCategoryChange:s=>w(s),width:"400px",fontColor:k(m.secondary)}),e.jsx(V,{to:"/categories",children:e.jsxs(z,{sx:{margin:"8px 0 24px 0 ",p:"12px 20px",borderRadius:"14px"},children:[e.jsx(J,{})," Â  Modify Categories"]})})]}),e.jsx(Q,{color:C,width:"400px",onColorChange:s=>{y(s)},fontColor:k(m.secondary)}),e.jsx(W,{onClick:M,disabled:t.length>r||o.length>i,children:"Create Task"})]})]})};export{se as default};
